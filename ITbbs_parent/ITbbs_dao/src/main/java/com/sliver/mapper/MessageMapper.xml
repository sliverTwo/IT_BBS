<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sliver.mapper.MessageMapper" >
  <resultMap id="BaseResultMap" type="com.sliver.pojo.Message" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="receiver_id" property="receiverId" jdbcType="INTEGER" />
    <result column="receiver" property="receiver" jdbcType="VARCHAR" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="sender_id" property="senderId" jdbcType="INTEGER" />
    <result column="send_time" property="sendTime" jdbcType="TIMESTAMP" />
    <result column="readed" property="readed" jdbcType="BIT" />
    <result column="deleted" property="deleted" jdbcType="BIT" />
    <result column="receive_time" property="receiveTime" jdbcType="TIMESTAMP" />
    <result column="sender" property="sender" jdbcType="VARCHAR" />
    <result column="delete_time" property="deleteTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, receiver_id, receiver, title, content, sender_id, send_time, readed, deleted, 
    receive_time, sender, delete_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.sliver.pojo.MessageExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from message
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from message
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from message
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.sliver.pojo.MessageExample" >
    delete from message
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sliver.pojo.Message" >
    insert into message (id, receiver_id, receiver, 
      title, content, sender_id, 
      send_time, readed, deleted, 
      receive_time, sender, delete_time
      )
    values (#{id,jdbcType=VARCHAR}, #{receiverId,jdbcType=INTEGER}, #{receiver,jdbcType=VARCHAR}, 
      #{title,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, #{senderId,jdbcType=INTEGER}, 
      #{sendTime,jdbcType=TIMESTAMP}, #{readed,jdbcType=BIT}, #{deleted,jdbcType=BIT}, 
      #{receiveTime,jdbcType=TIMESTAMP}, #{sender,jdbcType=VARCHAR}, #{deleteTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.sliver.pojo.Message" >
    insert into message
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="receiverId != null" >
        receiver_id,
      </if>
      <if test="receiver != null" >
        receiver,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="senderId != null" >
        sender_id,
      </if>
      <if test="sendTime != null" >
        send_time,
      </if>
      <if test="readed != null" >
        readed,
      </if>
      <if test="deleted != null" >
        deleted,
      </if>
      <if test="receiveTime != null" >
        receive_time,
      </if>
      <if test="sender != null" >
        sender,
      </if>
      <if test="deleteTime != null" >
        delete_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="receiverId != null" >
        #{receiverId,jdbcType=INTEGER},
      </if>
      <if test="receiver != null" >
        #{receiver,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="senderId != null" >
        #{senderId,jdbcType=INTEGER},
      </if>
      <if test="sendTime != null" >
        #{sendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="readed != null" >
        #{readed,jdbcType=BIT},
      </if>
      <if test="deleted != null" >
        #{deleted,jdbcType=BIT},
      </if>
      <if test="receiveTime != null" >
        #{receiveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sender != null" >
        #{sender,jdbcType=VARCHAR},
      </if>
      <if test="deleteTime != null" >
        #{deleteTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sliver.pojo.MessageExample" resultType="java.lang.Integer" >
    select count(*) from message
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update message
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.receiverId != null" >
        receiver_id = #{record.receiverId,jdbcType=INTEGER},
      </if>
      <if test="record.receiver != null" >
        receiver = #{record.receiver,jdbcType=VARCHAR},
      </if>
      <if test="record.title != null" >
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null" >
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.senderId != null" >
        sender_id = #{record.senderId,jdbcType=INTEGER},
      </if>
      <if test="record.sendTime != null" >
        send_time = #{record.sendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.readed != null" >
        readed = #{record.readed,jdbcType=BIT},
      </if>
      <if test="record.deleted != null" >
        deleted = #{record.deleted,jdbcType=BIT},
      </if>
      <if test="record.receiveTime != null" >
        receive_time = #{record.receiveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.sender != null" >
        sender = #{record.sender,jdbcType=VARCHAR},
      </if>
      <if test="record.deleteTime != null" >
        delete_time = #{record.deleteTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update message
    set id = #{record.id,jdbcType=VARCHAR},
      receiver_id = #{record.receiverId,jdbcType=INTEGER},
      receiver = #{record.receiver,jdbcType=VARCHAR},
      title = #{record.title,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=VARCHAR},
      sender_id = #{record.senderId,jdbcType=INTEGER},
      send_time = #{record.sendTime,jdbcType=TIMESTAMP},
      readed = #{record.readed,jdbcType=BIT},
      deleted = #{record.deleted,jdbcType=BIT},
      receive_time = #{record.receiveTime,jdbcType=TIMESTAMP},
      sender = #{record.sender,jdbcType=VARCHAR},
      delete_time = #{record.deleteTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sliver.pojo.Message" >
    update message
    <set >
      <if test="receiverId != null" >
        receiver_id = #{receiverId,jdbcType=INTEGER},
      </if>
      <if test="receiver != null" >
        receiver = #{receiver,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="senderId != null" >
        sender_id = #{senderId,jdbcType=INTEGER},
      </if>
      <if test="sendTime != null" >
        send_time = #{sendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="readed != null" >
        readed = #{readed,jdbcType=BIT},
      </if>
      <if test="deleted != null" >
        deleted = #{deleted,jdbcType=BIT},
      </if>
      <if test="receiveTime != null" >
        receive_time = #{receiveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sender != null" >
        sender = #{sender,jdbcType=VARCHAR},
      </if>
      <if test="deleteTime != null" >
        delete_time = #{deleteTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sliver.pojo.Message" >
    update message
    set receiver_id = #{receiverId,jdbcType=INTEGER},
      receiver = #{receiver,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      sender_id = #{senderId,jdbcType=INTEGER},
      send_time = #{sendTime,jdbcType=TIMESTAMP},
      readed = #{readed,jdbcType=BIT},
      deleted = #{deleted,jdbcType=BIT},
      receive_time = #{receiveTime,jdbcType=TIMESTAMP},
      sender = #{sender,jdbcType=VARCHAR},
      delete_time = #{deleteTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <insert id="insertBatchSelective" parameterType="java.util.List" >
    insert into message
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="list[0].id!=null" >
        id,
      </if>
      <if test="list[0].receiverId!=null" >
        receiver_id,
      </if>
      <if test="list[0].receiver!=null" >
        receiver,
      </if>
      <if test="list[0].title!=null" >
        title,
      </if>
      <if test="list[0].content!=null" >
        content,
      </if>
      <if test="list[0].senderId!=null" >
        sender_id,
      </if>
      <if test="list[0].sendTime!=null" >
        send_time,
      </if>
      <if test="list[0].readed!=null" >
        readed,
      </if>
      <if test="list[0].deleted!=null" >
        deleted,
      </if>
      <if test="list[0].receiveTime!=null" >
        receive_time,
      </if>
      <if test="list[0].sender!=null" >
        sender,
      </if>
      <if test="list[0].deleteTime!=null" >
        delete_time,
      </if>
    </trim>
     values 
    <foreach collection="list" index="index" item="item" separator="," >
      <trim prefix=" (" suffix=")" suffixOverrides="," >
        <if test="item.id!=null" >
          #{item.id,jdbcType=VARCHAR},
        </if>
        <if test="item.receiverId!=null" >
          #{item.receiverId,jdbcType=INTEGER},
        </if>
        <if test="item.receiver!=null" >
          #{item.receiver,jdbcType=VARCHAR},
        </if>
        <if test="item.title!=null" >
          #{item.title,jdbcType=VARCHAR},
        </if>
        <if test="item.content!=null" >
          #{item.content,jdbcType=VARCHAR},
        </if>
        <if test="item.senderId!=null" >
          #{item.senderId,jdbcType=INTEGER},
        </if>
        <if test="item.sendTime!=null" >
          #{item.sendTime,jdbcType=TIMESTAMP},
        </if>
        <if test="item.readed!=null" >
          #{item.readed,jdbcType=BIT},
        </if>
        <if test="item.deleted!=null" >
          #{item.deleted,jdbcType=BIT},
        </if>
        <if test="item.receiveTime!=null" >
          #{item.receiveTime,jdbcType=TIMESTAMP},
        </if>
        <if test="item.sender!=null" >
          #{item.sender,jdbcType=VARCHAR},
        </if>
        <if test="item.deleteTime!=null" >
          #{item.deleteTime,jdbcType=TIMESTAMP},
        </if>
      </trim>
    </foreach>
  </insert>
  <update id="updateBatchByPrimaryKeySelective" parameterType="java.util.List" >
    <foreach collection="list" item="item" index="index" separator=";" >
      update message
      <set >
        <if test="item.receiverId!=null" >
          receiver_id=#{item.receiverId,jdbcType=INTEGER},
        </if>
        <if test="item.receiver!=null" >
          receiver=#{item.receiver,jdbcType=VARCHAR},
        </if>
        <if test="item.title!=null" >
          title=#{item.title,jdbcType=VARCHAR},
        </if>
        <if test="item.content!=null" >
          content=#{item.content,jdbcType=VARCHAR},
        </if>
        <if test="item.senderId!=null" >
          sender_id=#{item.senderId,jdbcType=INTEGER},
        </if>
        <if test="item.sendTime!=null" >
          send_time=#{item.sendTime,jdbcType=TIMESTAMP},
        </if>
        <if test="item.readed!=null" >
          readed=#{item.readed,jdbcType=BIT},
        </if>
        <if test="item.deleted!=null" >
          deleted=#{item.deleted,jdbcType=BIT},
        </if>
        <if test="item.receiveTime!=null" >
          receive_time=#{item.receiveTime,jdbcType=TIMESTAMP},
        </if>
        <if test="item.sender!=null" >
          sender=#{item.sender,jdbcType=VARCHAR},
        </if>
        <if test="item.deleteTime!=null" >
          delete_time=#{item.deleteTime,jdbcType=TIMESTAMP},
        </if>
      </set>
      where 
      id = #{item.id,jdbcType=VARCHAR}
    </foreach>
  </update>
</mapper>